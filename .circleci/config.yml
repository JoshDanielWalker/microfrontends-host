version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run build
          command: yarn build
  experiment: 
    type: approval
    requires: build        
  deploy_k8s:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "Cloud"
      - GOOGLE_PROJECT_ID: "spherical-treat-243615"
      - GOOGLE_COMPUTE_ZONE: "europe-west2-b"
      - GOOGLE_CLUSTER_NAME: "microfrontends"
    steps:
      - checkout
      - run:
          name: Install Helm
          command: |
            curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
            helm init -c
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker build and push
          command: |
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              -f ./.deployment/docker/Dockerfile \
              -t cloud .
            docker tag cloud eu.gcr.io/${GOOGLE_PROJECT_ID}/cloud:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/cloud:${CIRCLE_SHA1}
      - run:
          name: Deploy to Kubernetes
          command: |
            helm template \
              --name="cloud" \
              --set Image.name="eu.gcr.io/${GOOGLE_PROJECT_ID}/cloud" \
              --set Image.tag="${CIRCLE_SHA1}" \
              ./.deployment/chart \
              | kubectl apply -f -
            kubectl rollout status deployment/host-app
workflows:
  version: 2
  ultimate_pipeline:
    jobs:
      - build
      - experiment
          requires:
          - build
      - deploy_k8s:
          requires:
            - experiment
          filters:
            branches:
              only:
                - master
                - /live-.*/
